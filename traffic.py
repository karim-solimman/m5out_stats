import openpyxl
import argparse
import os

triBA27_nodes = [
    '111', '112', '113', '121', '122', '123', '131', '132', '133',
    '211', '212', '213', '221', '222', '223', '231', '232', '233',
    '311', '312', '313', '321', '322', '323', '331', '332', '333'
]

triBA27_m5_nodes = ['system.ruby.network.routers' +
                    val for val in triBA27_nodes]

traffic = ['generated_packets', 'forwarded_packets', 'received_packets']


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Program to collect the output data from gem5 output file and combine it into excel file")
    parser.add_argument("--injectionrate",
                        help="Provide injectionrate", default=0.02)
    parser.add_argument(
        "--synthetic", help="Provide synthetic traffic because the different out format file", default="triba27_uniform_random")
    parser.add_argument(
        "--sim_cycles", help="Provide simulation clock cycles for simulation", default="5000000")
    args = parser.parse_args()

    assert (args.synthetic == "triba27_uniform_random" or args.synthetic ==
            "triba27_bit_reverse" or args.synthetic == "triba27_transpose" or args.synthetic == "triba27_tornado"
            or args.synthetic == "triba27_bit_complement" or args.synthetic == "triba27_shuffle")

    # open Excel file to save the data from m5out stats text file generated from gem5 simulator
    work_book = openpyxl.load_workbook(
        "/home/soliman/m5out_stats/m5out_stats_adaptive_traffic.xlsx")
    work_sheet = work_book["Sheet1"]

    # data list that will store the output values from gem5 simulator
    # begin the list with the injection rate
    data = [float(args.injectionrate)]
    # append the type of the synthetic traffic that being used
    data.append(args.synthetic)
    data.append(int(args.sim_cycles) / 500)

    # open the stats file that was generated by gem5
    print(os. getcwd())
    m5_file = open("/home/soliman/gem5_nxtspr/gem5/m5out/stats.txt")

    for line in m5_file:
        if "system.ruby.network.packets_injected::total" in line:
            print(line.split())
            data.append(float(line.split()[1]))
        if "system.ruby.network.packets_received::total" in line:
            print(line.split())
            data.append(float(line.split()[1]))
        if "system.ruby.network.flits_injected::total" in line:
            print(line.split())
            data.append(float(line.split()[1]))
        if "system.ruby.network.flits_received::total" in line:
            print(line.split())
            data.append(float(line.split()[1]))
        for node in triBA27_m5_nodes:
            for traf in traffic:
                line_to_search = node + '.' + traf
                splitted_line = line.split()
                if line_to_search in splitted_line:
                    # print(splitted_line, len(splitted_line))
                    data.append(float(splitted_line[1]))
    data.append("adaptive")
    work_sheet.append(data)
    print(data, len(data))
    m5_file.close()
    work_book.save(
        "/home/soliman/m5out_stats/m5out_stats_adaptive_traffic.xlsx")
